import tweepy
import requests

# X (formerly Twitter) API credentials
bearer_token = 'YOUR_X_API_BEARER_TOKEN'

# Discord Webhook URL
discord_webhook_url = 'YOUR_DISCORD_WEBHOOK_URL'

# X account to track
x_username = 'USERNAME_TO_TRACK'

# Tweepy client setup
client = tweepy.Client(bearer_token=bearer_token)

def post_to_discord(post):
    post_url = f"https://x.com/{x_username}/status/{post['id']}"
    message = f"New post by **{x_username}**: {post_url}"
    
    payload = {
        "content": message
    }
    
    response = requests.post(discord_webhook_url, json=payload)
    
    if response.status_code == 204:
        print("Post shared to Discord successfully.")
    else:
        print(f"Failed to share post to Discord: {response.status_code}")

class MyStreamListener(tweepy.StreamingClient):
    def on_tweet(self, tweet):
        print(f"New post from {x_username}: {tweet.text}")
        post_to_discord(tweet.data)  # Send the post to Discord

    def on_error(self, status_code):
        print(f"Error: {status_code}")
        if status_code == 420:
            # Rate limited; stop the stream
            return False

def main():
    # Get the user ID to track
    user = client.get_user(username=x_username)
    user_id = user.data.id
    
    # Set up streaming listener
    stream_listener = MyStreamListener(bearer_token)
    
    # Add rule to filter the stream for posts from the specific user
    stream_listener.add_rules(tweepy.StreamRule(f"from:{user_id}"))
    
    # Start streaming
    print(f"Starting stream for {x_username} (ID: {user_id})...")
    stream_listener.filter(expansions="author_id")

if __name__ == "__main__":
    main()