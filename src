import tweepy
import requests

# X (formerly Twitter) API credentials
api_key = 'YOUR_API_KEY'
api_secret = 'YOUR_API_SECRET'
access_token = 'YOUR_ACCESS_TOKEN'
access_token_secret = 'YOUR_ACCESS_TOKEN_SECRET'

# Discord Webhook URL
discord_webhook_url = 'YOUR_DISCORD_WEBHOOK_URL'

# X account to track
x_username = 'USERNAME_TO_TRACK'

# OAuth1 Authentication
auth = tweepy.OAuth1UserHandler(
    api_key,
    api_secret,
    access_token,
    access_token_secret
)

# Set up Tweepy API client
api = tweepy.API(auth)

def post_to_discord(post):
    post_url = f"https://x.com/{x_username}/status/{post.id_str}"
    message = f"New post by **{x_username}**: {post_url}"
    
    payload = {
        "content": message
    }
    
    response = requests.post(discord_webhook_url, json=payload)
    
    if response.status_code == 204:
        print("Post shared to Discord successfully.")
    else:
        print(f"Failed to share post to Discord: {response.status_code}")

class MyStreamListener(tweepy.StreamListener):
    def on_status(self, status):
        # Check if the post is from the desired user
        if status.user.screen_name.lower() == x_username.lower():
            print(f"New post from {x_username}: {status.text}")
            post_to_discord(status)  # Send the post to Discord

    def on_error(self, status_code):
        print(f"Error: {status_code}")
        if status_code == 420:
            # Rate limited; stop the stream
            return False

def main():
    # Set up streaming listener
    stream_listener = MyStreamListener()
    stream = tweepy.Stream(auth=api.auth, listener=stream_listener)
    
    # Start streaming
    print(f"Starting stream for {x_username}...")
    stream.filter(follow=[str(api.get_user(screen_name=x_username).id)])

if __name__ == "__main__":
    main()